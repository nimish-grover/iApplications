"""add state short_name

Revision ID: 5d7c39b46a4b
Revises: 3575945df29e
Create Date: 2024-12-16 17:42:44.563008

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '5d7c39b46a4b'
down_revision = '3575945df29e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('block_industries', schema=None) as batch_op:
        batch_op.alter_column('created_on',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True)

    with op.batch_alter_table('block_waterbodies', schema=None) as batch_op:
        batch_op.alter_column('created_on',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True)

    with op.batch_alter_table('states', schema=None) as batch_op:
        batch_op.add_column(sa.Column('short_name', sa.Boolean(), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('states', schema=None) as batch_op:
        batch_op.drop_column('short_name')

    with op.batch_alter_table('block_waterbodies', schema=None) as batch_op:
        batch_op.alter_column('created_on',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)

    with op.batch_alter_table('block_industries', schema=None) as batch_op:
        batch_op.alter_column('created_on',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)

    # ### end Alembic commands ###
